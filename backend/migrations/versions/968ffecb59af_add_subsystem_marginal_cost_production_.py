"""add subsystem, marginal cost, production statement and variable cost tables

Revision ID: 968ffecb59af
Revises:
Create Date: 2025-03-17 00:06:45.535173

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "968ffecb59af"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "subsistema",
        sa.Column("id_subsistema", sa.String(), nullable=False),
        sa.Column("nome_subsistema", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id_subsistema", name=op.f("pk_subsistema")),
    )
    op.create_table(
        "balanco_subsistema_horario",
        sa.Column("valor_carga", sa.Float(), nullable=False),
        sa.Column("valor_intercambio", sa.Float(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("id_subsistema", sa.String(), nullable=False),
        sa.Column("data", sa.Date(), nullable=False),
        sa.Column("hora", sa.Time(), nullable=False),
        sa.Column("geracao_eolica", sa.Float(), nullable=True),
        sa.Column("geracao_termica", sa.Float(), nullable=True),
        sa.Column("geracao_solar", sa.Float(), nullable=True),
        sa.Column("geracao_hidraulica", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["id_subsistema"],
            ["subsistema.id_subsistema"],
            name=op.f("balanco_subsistema_horario_id_subsistema_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_balanco_subsistema_horario")),
    )
    op.create_table(
        "balanco_subsistema_semihorario",
        sa.Column("geracao_hidraulica_pequena_usina", sa.Float(), nullable=False),
        sa.Column("geracao_termica_pequena_usina", sa.Float(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("id_subsistema", sa.String(), nullable=False),
        sa.Column("data", sa.Date(), nullable=False),
        sa.Column("hora", sa.Time(), nullable=False),
        sa.Column("geracao_eolica", sa.Float(), nullable=True),
        sa.Column("geracao_termica", sa.Float(), nullable=True),
        sa.Column("geracao_solar", sa.Float(), nullable=True),
        sa.Column("geracao_hidraulica", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["id_subsistema"],
            ["subsistema.id_subsistema"],
            name=op.f("balanco_subsistema_semihorario_id_subsistema_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_balanco_subsistema_semihorario")),
    )
    op.create_table(
        "custo_marginal_operacao_semanal",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("id_subsistema", sa.String(), nullable=False),
        sa.Column("custo_marginal_operacao_semanal", sa.Float(), nullable=False),
        sa.Column(
            "custo_marginal_operacao_semanal_carga_leve", sa.Float(), nullable=False
        ),
        sa.Column(
            "custo_marginal_operacao_semanal_carga_media", sa.Float(), nullable=False
        ),
        sa.Column(
            "custo_marginal_operacao_semanal_carga_pesada", sa.Float(), nullable=False
        ),
        sa.Column("data", sa.Date(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_subsistema"],
            ["subsistema.id_subsistema"],
            name=op.f("custo_marginal_operacao_semanal_id_subsistema_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_custo_marginal_operacao_semanal")),
    )
    op.create_table(
        "custo_marginal_operacao_semihorario",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("id_subsistema", sa.String(), nullable=False),
        sa.Column("custo_marginal_operacao", sa.Float(), nullable=False),
        sa.Column("data", sa.Date(), nullable=False),
        sa.Column("hora", sa.Time(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_subsistema"],
            ["subsistema.id_subsistema"],
            name=op.f("custo_marginal_operacao_semihorario_id_subsistema_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "id", name=op.f("pk_custo_marginal_operacao_semihorario")
        ),
    )
    op.create_table(
        "custo_variavel_unitario_usinas_termicas",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("id_subsistema", sa.String(), nullable=False),
        sa.Column("id_modelo_usina", sa.String(), nullable=False),
        sa.Column("usina", sa.String(), nullable=False),
        sa.Column("semana_operativa", sa.String(), nullable=False),
        sa.Column("custo_variavel_unitario", sa.Float(), nullable=False),
        sa.Column("data_inicio", sa.Date(), nullable=False),
        sa.Column("data_fim", sa.Date(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_subsistema"],
            ["subsistema.id_subsistema"],
            name=op.f("custo_variavel_unitario_usinas_termicas_id_subsistema_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "id", name=op.f("pk_custo_variavel_unitario_usinas_termicas")
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("custo_variavel_unitario_usinas_termicas")
    op.drop_table("custo_marginal_operacao_semihorario")
    op.drop_table("custo_marginal_operacao_semanal")
    op.drop_table("balanco_subsistema_semihorario")
    op.drop_table("balanco_subsistema_horario")
    op.drop_table("subsistema")
    # ### end Alembic commands ###
