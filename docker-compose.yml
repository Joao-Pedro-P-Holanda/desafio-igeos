
services:
  backend-dev:
    container_name: backend-dev
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    environment: 
      DATABASE_URL: sqlite+aiosqlite:///sin.db
    volumes:
      - ./backend/app:/app/app
      - ./backend/migrations:/app/migrations
      - ./backend/scripts/:/app/scripts
    ports:
      - 4000:4000
  backend-prod:
    container_name: backend-prod
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    depends_on:
      database:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql+psycopg://${DB_USER:?}:{$DB_PASSWORD:?}@database:${DB_PORT:-5432}/${DB_NAME-?}
    ports:
      - 8000:8000
  database:
    image: postgres:17.4-alpine
    volumes:
      - prod_db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER:?}
      POSTGRES_PASSWORD: ${DB_PASSWORD:?}
      POSTGRES_DB: ${DB_NAME:?}
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -d ${DB_NAME} -U ${DB_USER}"]
        interval: 5s
        timeout: 5s
        retries: 1


  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000


volumes:
  prod_db:
